name: Release GKI
on:
  workflow_dispatch:

jobs:
  build-a12-510:
    uses: ./.github/workflows/kernel-a12-5.10.yml
    secrets: inherit
  build-a13-510:
    uses: ./.github/workflows/kernel-a13-5.10.yml
    secrets: inherit
  build-a13-515:
    uses: ./.github/workflows/kernel-a13-5.15.yml
    secrets: inherit
  build-a14-515:
    uses: ./.github/workflows/kernel-a14-5.15.yml
    secrets: inherit
  build-a14-61:
    uses: ./.github/workflows/kernel-a14-6.1.yml
    secrets: inherit
  build-a15-66:
    uses: ./.github/workflows/kernel-a15-6.6.yml
    secrets: inherit
  release:
    needs:
      - build-a12-510
      - build-a13-510
      - build-a13-515
      - build-a14-515
      - build-a14-61
      - build-a15-66
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Get KernelSU manifest
        id: ksu
        run: |
          git clone https://github.com/luyanci/KernelSU.git && cd KernelSU
          echo "TAGS=`git describe --tags --always`" >> $GITHUB_OUTPUT
          COMMIT_COUNT=$(git rev-list --count HEAD)
          VER=$(expr 10200 + $COMMIT_COUNT)
          echo "NUM=`echo $VER`" >> $GITHUB_OUTPUT
          echo "LAST_COMMIT=`git show-branch --no-name HEAD`" >> $GITHUB_OUTPUT
      - name: Display structure of downloaded files
        run: ls -R
      - name: Zip AnyKernel3
        run: |
          for dir in AnyKernel3-*; do
            if [ -d "$dir" ]; then
              echo "----- Zip $dir -----"
              (cd $dir && zip -r9 "$dir".zip ./* -x .git .gitignore ./*.zip && mv *.zip ..)
            fi
          done
      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            AnyKernel3-*.zip
            boot-images-*/Image-*/*.img.gz
          name: gki-${{ github.run_id }}
          tag_name: ${{ github.run_id }}
          body: |
            Last KernelSU commit: ```${{ steps.ksu.outputs.LAST_COMMIT }}```
            KernelSU version: ```${{ steps.ksu.outputs.NUM }}```
            KernelSU tags: ```${{ steps.ksu.outputs.TAGS }}```
            Run-id: ```${{ github.run_id }}```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
